<?xml version="1.0" encoding="utf-8" ?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  autoReload="true"
	  internalLogLevel="Info"
	  internalLogFile="logs/internal-nlog.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>

		<!-- write logs to file  -->
		<target xsi:type="File"
				name="AllFile"
				fileName="${basedir}/logs/AllLogFile/nlog-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!-- another file log, only own logs. Uses some ASP.NET core renderers -->
		<target xsi:type="File"
				name="TraceFile"
				fileName="${basedir}/logs/Trace/nlog-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
		<!--保存至文件-->
		<target xsi:type="File"
				name="DebugFile"
				fileName="${basedir}/logs/Debug/nlog-Debug-${shortdate}.log"
				layout="${date:format=HH\:mm\:ss.fff}: ${message}"  />


		<!--保存至文件-->
		<target xsi:type="File"
				name="JosonFile"
				fileName="${basedir}/logs/${shortdate}.log"
				layout="${longdate} ${level:uppercase=true} ${event-context:item=Action} ${message} ${event-context:item=Amount} ${stacktrace} ${newline} ${exception:format=tostring} ${newline}" />


		<!--保存至文件-->
		<target xsi:type="File"
				maxArchiveFiles="30"
				archiveAboveSize="512"
				name="ErrorFile"
				fileName="${basedir}/logs/Error/${shortdate}.log"
				layout="${longdate} ${level:uppercase=true} ${event-context:item=Action}  ${message}  ${newline} ${event-context:item=Amount}  ${newline} ${stacktrace} ${newline}" />


		<!--屏幕打印消息-->
		<target name="console" xsi:type="ColoredConsole"
						layout="${date:format=HH\:mm\:ss}> ${message}"/>

		<!--VS输出窗口-->
		<target name="debugger" xsi:type="Debugger"
						layout="${date:format=HH\:mm\:ss} | ${level:padding=-5} | ${message}" />

		

		<!-- 保存到数据库 -->
		<target name="Database" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<target type="Database" dbProvider="mssql" connectionString="Data Source=.;Initial Catalog=OA;Persist Security Info=True;User ID=sa;Password=Joson080256;">

				<commandText>
					INSERT INTO Log(Timestamp,Level,Message,Action,Amount,StackTrace) VALUES(@time_stamp, @level, @message, @action, @amount, @stacktrace);
				</commandText>

				<!-- database connection parameters -->
				<parameter name="@time_stamp" layout="${date}" />
				<parameter name="@level" layout="${level:uppercase=true}" />
				<parameter name="@message" layout="${message}" />
				<parameter name="@action" layout="${event-context:item=Action}" />
				<parameter name="@amount" layout="${event-context:item=Amount}" />
				<parameter name="@stacktrace" layout="${stacktrace}" />
			</target>
		</target>

		
		<!-- 发送邮件 -->
		<!--smtpUserName发件人的邮箱账号-->
		<!--smtpPassword发件人的邮箱密码-->
		<!--enableSsl 是否使用SSL访问特定的SMTP邮件服务器-->
		<!--from发件人的邮箱-->
		<!--to 收件人的邮箱 如果是多个用，隔开-->
		<target xsi:type="Mail" name="InfoMail"
			smtpServer="123.125.50.133"
			smtpPort="25"
			enableSsl="true"
			smtpAuthentication="Basic"
			smtpUserName="XXXXXX@163.com"
			smtpPassword="XXXXXXX"
			from="XXXXXXX@163.com"
			to="XXXXXX@qq.com"
			subject="${machinename}"
			header="==================================="
			body="${newline}${message}${newline}"
			footer="===================================="     />




		<target name="elastic" xsi:type="BufferingWrapper" flushTimeout="5000">
			<target xsi:type="ElasticSearch" uri="http://localhost:9200/" />
		</target>
 

	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="AllFile" />
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!-- BlackHole without writeTo -->

		<logger name="*" minlevel="Info" writeTo="AllFile" />
		<logger name="*" minlevel="Trace" writeTo="TraceFile" />
		<logger name="*" minlevel="Warn" writeTo="JosonFile" />
		<logger name="*" minlevel="Debug" writeTo="DebugFile" />
		<logger name="*" minlevel="Error" writeTo="ErrorFile" />
		<logger name="*" minlevel="Fatal" writeTo="FatalFile" />

		<!--<logger name="*" minlevel="Info" writeTo="Database" />-->

		<!--<logger name="*" minlevel="Info" writeTo="InfoMail" />-->

		<!--
			Trace - 最常见的记录信息，一般用于普通输出
			Debug - 同样是记录信息，不过出现的频率要比Trace少一些，一般用来调试程序
			Info - 信息类型的消息
			Warn - 警告信息，一般用于比较重要的场合
			Error - 错误信息
			Fatal - 致命异常信息。一般来讲，发生致命异常之后程序将无法继续执行。
		-->

		<logger name="*" minlevel="Info" writeTo="elastic" />
	</rules>
</nlog>